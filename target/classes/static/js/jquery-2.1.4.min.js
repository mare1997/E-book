var userId;
var userRole;

$(document).ready(function() {
	var token = localStorage.getItem("token");
	userId = sessionStorage.getItem("id");
	userRole = sessionStorage.getItem("userRole");
	var url = new URL(window.location);
	var param = url.searchParams.get("id");
	if(param != null){
		loadEbookByCategory(param);
		return;
	}
	if(userRole !="ADMIN"){
		loadEbooksSubscriber();
	}else{
		loadEbooksAdmin();
	}
});
function loadEbookByCategory(category){
	var token = localStorage.getItem("token");
	headers:{Authorization:"Bearer " + token}
	var table =  $('#myTable');
	table.empty();
	table.append('<tr>'+
					'<th>Title</th>'+
					'<th>Author</th>'+
					'<th>Category</th>'+
					'<th>Publication year</th>'+
					'<th>MIME</th>'+
					'<th>Language</th>'+
				'</tr>');
	$.ajax({
		url:'https://localhost:8080/ebook/books/ebooksbycategory/'+category,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			if(response.length == 0){
				var table =  $('#myTable');
				table.empty();
				alert("Table books are empty.")
				return;
			}
			for(var i=0; i<response.length; i++) {
				var table =  $('#myTable');
				book = response[i];
				table.append('<tr>'+
								'<td>'+book.title+'</td>'+
								'<td>'+book.author+'</td>'+
								'<td>'+book.category.name+'</td>'+
								'<td>'+book.publication_year+'</td>'+
								'<td>'+book.mime+'</td>'+
								'<td>'+book.language.name+'</td>'+
							'</tr>');
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error." + textStatus);
			}
		}
	});
}
function loadEbooksSubscriber(){
	var token = localStorage.getItem("token");
	
	if(userId ==  "null"  || userRole != "USER"){
		loadEbooksNotLogin();
	}else{
	var table =  $('#myTable');
	table.empty();
	table.append('<tr>'+
					'<th>Title</th>'+
					'<th>Author</th>'+
					'<th>Category</th>'+
					'<th>Publication year</th>'+
					'<th>MIME</th>'+
					'<th>Language</th>'+
				'</tr>');
	var user;
	$.ajax({
		url:'https://localhost:8080/ebook/users/'+userId,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		async: false,
		success:function(response){
			user = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error." + textStatus);
			}
		}
	});
	console.log(user.category);
	if(user.category != "NONE"){
		$.ajax({
			url:'https://localhost:8080/ebook/books/ebooksbycategory/'+user.category,
			headers:{Authorization:"Bearer " + token},
			type: 'GET',
			dataType:'json',
			crossDomain: true,
			success:function(response){
				if(response.length == 0){
					var table =  $('#myTable');
					table.empty();
					alert("Table books are empty.")
					return;
				}
				
				for(var i=0; i<response.length; i++) {
					var table =  $('#myTable');
					book = response[i];
					table.append('<tr>'+
									'<td>'+book.title+'</td>'+
									'<td>'+book.author+'</td>'+
									'<td>'+book.category.name+'</td>'+
									'<td>'+book.publication_year+'</td>'+
									'<td>'+book.mime+'</td>'+
									'<td>'+book.language.name+'</td>'+
								'</tr>');
				}
			},
			error: function (jqXHR, textStatus, errorThrown) {  
				if(jqXHR.status=="404"){
					alert("Error." + textStatus);
				}
			}
		});
	}else {
		loadEbooksNotLogin();
	}
	}
}
function loadEbooksAdmin(){
	var token = localStorage.getItem("token");
	var table =  $('#myTable');
	table.empty();
	table.append('<tr>'+
					'<th>Title</th>'+
					'<th>Author</th>'+
					'<th>Category</th>'+
					'<th>Publication year</th>'+
					'<th>MIME</th>'+
					'<th>Language</th>'+
					
					'<th>Edit</th>'+
					'<th>Delete</th>'+
					'<th><a class="btn btn-danger" data-toggle="modal" id="addBtn" onclick="add()" href="#AddNewEBook">Add</a></th>'+
				'</tr>');
	
	$.ajax({
		url:'https://localhost:8080/ebook/books/all',
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			if(response.length == 0){
				var table =  $('#myTable');
				table.empty();
				alert("Table books are empty.")
				return;
			}
			for(var i=0; i<response.length; i++) {
				var table =  $('#myTable');
				book = response[i];
				table.append('<tr>'+
								'<td>'+book.title+'</td>'+
								'<td>'+book.author+'</td>'+
								'<td>'+book.category.name+'</td>'+
								'<td>'+book.publication_year+'</td>'+
								'<td>'+book.mime+'</td>'+
								'<td>'+book.language.name+'</td>'+
								//'<td><a class="btn btn-danger" id="downloadBtn" onclick="">Download</a></td>'+
								'<td><a class="btn btn-danger" data-toggle="modal" id="editBtn" onclick="editEBook('+book.id+')" href="#EditNewEBook">Edit</a></td>'+
								'<td><a class="btn btn-danger" data-toggle="modal" id="deleteBtn" onclick="deleteEBook('+book.id+')" href="#deleteEbookModal">Delete</a></td>'+
							'</tr>');
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error." + textStatus);
			}
		}
	});
}
function loadEbooksNotLogin(){
	var table =  $('#myTable');
	var token = localStorage.getItem("token");
	
	table.empty();
	table.append('<tr>'+
					'<th>Title</th>'+
					'<th>Author</th>'+
					'<th>Category</th>'+
					'<th>Publication year</th>'+
					'<th>MIME</th>'+
					'<th>Language</th>'+
				'</tr>');
	
	$.ajax({
		url:'https://localhost:8080/ebook/books/all',
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			if(response.length == 0){
				var table =  $('#myTable');
				table.empty();
				alert("Table books are empty.")
				return;
			}
			for(var i=0; i<response.length; i++) {
				var table =  $('#myTable');
				book = response[i];
				table.append('<tr>'+
								'<td>'+book.title+'</td>'+
								'<td>'+book.author+'</td>'+
								'<td>'+book.category.name+'</td>'+
								'<td>'+book.publication_year+'</td>'+
								'<td>'+book.mime+'</td>'+
								'<td>'+book.language.name+'</td>'+
							'</tr>');
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error." + textStatus);
			}
		}
	});
}
function add(){
	select = document.getElementById('categorySelectAdd');
	var token = localStorage.getItem("token");
	$.ajax({
		url:'https://localhost:8080/ebook/category',
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			for(var i=0; i<response.length; i++) {
				category = response[i];
				var opt = document.createElement('option');
			    opt.value = category.name;
			    opt.innerHTML = category.name;
			    select.appendChild(opt);
				
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error.");
			}
		}
	});
	selectL = document.getElementById('languageSelectAdd');
	
	$.ajax({
		url:'https://localhost:8080/ebook/languages',
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			for(var i=0; i<response.length; i++) {
				language = response[i];
				var opt = document.createElement('option');
			    opt.value = language.name;
			    opt.innerHTML = language.name;
			    selectL.appendChild(opt);
				
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error.");
			}
		}
	});
	
	$('#fileA').val('');
	$('#titleA').val('');
	$('#keywordsA').val('');
	$('#filenameA').val('');
	$('#authorA').val('');
	$('#yearA').val('');
	$('#mimeA').val('');
}

function getMetadata(){
	var file = $('#fileA')[0].files[0];
	var data=new FormData();
	var token = localStorage.getItem("token");
	data.append('file',file);
	$.ajax({
		type: 'POST',
        contentType: false,
        url: 'https://localhost:8080/ebook/books/file',
        headers:{Authorization:"Bearer " + token},
        data: data,
        dataType: false,
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("metapodaci: "  );
        	console.log(response)
        	$('#titleA:text').val(response.title);
        	$('#keywordsA:text').val(response.keywords);
        	$('#filenameA:text').val(response.filename);
        	$('#authorA:text').val(response.author);
           
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
	
	
}

function getMetadataEdit(){
	var file = $('#fileE')[0].files[0];
	var data=new FormData();
	var token = localStorage.getItem("token");
	data.append('file',file);
	$.ajax({
		type: 'POST',
        contentType: false,
        url: 'https://localhost:8080/ebook/books/file',
        headers:{Authorization:"Bearer " + token},
        data: data,
        dataType: false,
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("metapodaci: "  );
        	console.log(response)
        	$('#titleE:text').val(response.title);
        	$('#keywordsE:text').val(response.keywords);
        	$('#filenameE:text').val(response.filename);
        	$('#authorE:text').val(response.author);
           
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
	
	
}

function addNewEBook(){
	var token = localStorage.getItem("token");
	var file = $('#fileA')[0].files[0];
	var title=$('#titleA').val().trim();
	var keywords=$('#keywordsA').val().trim();
	var filename=$('#filenameA').val().trim();
	var author=$('#authorA').val().trim();
	var year=$('#yearA').val().trim();
	var mime=$('#mimeA').val().trim();
	var categoryName=$('#categorySelectAdd').val();
	var languageName=$('#languageSelectAdd').val();
	
	if(title == "" || keywords == "" || filename =="" || author == "" || year == "" || mime == "" || file == null ){
		alert("All fields must be filled.");
		return;
	}
	
	var form = $('#fileUploadForm')[0];
    console.log(form);
    var data = new FormData(form);
    console.log(data);
	console.log("Kategorija uzeta iz selecta: " + categoryName)
	var category;
	$.ajax({
		url:'https://localhost:8080/ebook/category/'+categoryName,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			category = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	var language;
	$.ajax({
		url:'https://localhost:8080/ebook/languages/'+languageName,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			language = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	var user;
	$.ajax({
		url:'https://localhost:8080/ebook/users/'+userId,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			user = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	
	var dataEbook = {
		'title':title,
		'author':author,
		'keywords':keywords,
		'publication_year':year,
		'filename':filename,
		'mime':mime,
		'user':user,
		'category':category,
		'language':language
	}
	console.log(dataEbook);
	$.ajax({
        type: "POST",
        enctype: 'multipart/form-data',
        url: "https://localhost:8080/ebook/books/index/add",
        headers:{Authorization:"Bearer " + token},
        data: data,
        processData: false, 
        contentType: false,
        cache: false,
        timeout: 600000,
        success: function (data) {
        	console.log("SUCCESS : ", data);
        	addBook(dataEbook);
        	

        },
        error: function (e) {
        	console.log("ERROR : ", e);
        	$('#AddNewEBook').modal('toggle');

        }
    });

	
}
function addBook(dataEbook){
	console.log("usao u fun")
	var token = localStorage.getItem("token");
	$.ajax({
		type: 'POST',
        contentType: 'application/json',
        url: 'https://localhost:8080/ebook/books/add',
        headers:{Authorization:"Bearer " + token},
        data: JSON.stringify(dataEbook),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("usao u fun succ")
        	$('#AddNewEBook').modal('toggle');
        	loadEbooksAdmin();
        	console.log("bravo mare")
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			console.log("usao u fun error " + jqXHR.status + textStatus + errorThrown )
			alert("usao u fun error " + jqXHR.status + textStatus + errorThrown )
			$('#AddNewEBook').modal('toggle');
		}
    });
}

var bookID;
function editEBook(id){
	bookID=id;
	var token = localStorage.getItem("token");
	select = document.getElementById('categorySelectEdit');
	$.ajax({
		url:'https://localhost:8080/ebook/category',
		 headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			for(var i=0; i<response.length; i++) {
				category = response[i];
				var opt = document.createElement('option');
			    opt.value = category.name;
			    opt.innerHTML = category.name;
			    select.appendChild(opt);
				
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error.");
			}
		}
	});
	selectL = document.getElementById('languageSelectEdit');
	$.ajax({
		url:'https://localhost:8080/ebook/languages',
		 headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		crossDomain: true,
		success:function(response){
			for(var i=0; i<response.length; i++) {
				language = response[i];
				var opt = document.createElement('option');
			    opt.value = language.name;
			    opt.innerHTML = language.name;
			    selectL.appendChild(opt);
				
			}
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="404"){
				alert("Error.");
			}
		}
	});
	$.ajax({
		url:'https://localhost:8080/ebook/books/'+id,
		 headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			
			$('#titleE').val(response.title);
			$('#keywordsE').val(response.keywords);
			$('#filenameE').val(response.filename);
			$('#authorE').val(response.author);
			$('#yearE').val(response.publication_year);
			$('#mimeE').val(response.mime);
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	
	
}
function editEbook(){
	//var file = $('#fileE')[0].files[0];
	var token = localStorage.getItem("token");
	var title=$('#titleE').val().trim();
	var keywords=$('#keywordsE').val().trim();
	var filename=$('#filenameE').val().trim();
	var author=$('#authorE').val().trim();
	var year=$('#yearE').val().trim();
	var mime=$('#mimeE').val().trim();
	var categoryName=$('#categorySelectEdit').val();
	var languageName=$('#languageSelectEdit').val();
	
	if(title == "" || keywords == "" || filename =="" || author == "" || year == "" || mime == ""){
		alert("All fields must be filled.");
		return;
	}
	
	
	
	var category;
	$.ajax({
		url:'https://localhost:8080/ebook/category/'+categoryName,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			category = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	var language;
	$.ajax({
		url:'https://localhost:8080/ebook/languages/'+languageName,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			language = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	var user;
	$.ajax({
		url:'https://localhost:8080/ebook/users/'+userId,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			console.log(response);
			user = response;
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	
	var dataEbook = {
		'title':title,
		'author':author,
		'keywords':keywords,
		'publication_year':year,
		'filename':filename,
		'mime':mime,
		'user':user,
		'category':category,
		'language':language
	}
	console.log(dataEbook);
	
	/*var form = $('#fileUploadFormEdit')[0];
    console.log(form);
    var data = new FormData(form);
    console.log(data);
	*/
	var data = {
			"title":title,
			"keywords":keywords,
			"author":author
	}
	
	var split1 = filename.split('ebook\\');
	console.log(split1);
	var split2= split1[1].split(".");
	var file = split2[0];
	
	console.log(JSON.stringify(data));
	console.log(data);
	console.log(file);
	
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'https://localhost:8080/ebook/books/edit/'+bookID+'/'+file,
        headers:{Authorization:"Bearer " + token},
        data: JSON.stringify(dataEbook),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("usao u fun succ")
        	$('#EditNewEBook').modal('toggle');
        	loadEbooksAdmin();
        	console.log("bravo mare")
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			console.log("usao u fun error " + jqXHR.status + textStatus + errorThrown )
			alert("usao u fun error " + jqXHR.status + textStatus + errorThrown )
			$('#EditNewEBook').modal('toggle');
		}
    });
	
}





var bookID;
function deleteEBook(id){
	bookID = id;
}

function deleteEbook(){
	var token = localStorage.getItem("token");
	var filename; 
	$.ajax({
		url:'https://localhost:8080/ebook/books/'+bookID,
		headers:{Authorization:"Bearer " + token},
		type: 'GET',
		dataType:'json',
		async: false,
		crossDomain: true,
		success:function(response){
			filename=response.filename;
			
		},
		error: function (jqXHR, textStatus, errorThrown) {  
			if(jqXHR.status=="403"){
				alert("Error.");
			}
			
		}	
			
	});
	var split1 = filename.split('ebook\\');
	console.log(split1);
	var split2= split1[1].split(".");
	var file = split2[0];
	
	$.ajax({
        url: 'https://localhost:8080/ebook/books/index/delete/'+file,
        headers:{Authorization:"Bearer " + token},
        contentType: "application/json",
		type: 'DELETE',
        success: function (response) {
        	console.log("book index delete success");
        	deleteBook();
        	
        	
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert("pri birsanju indeksa: "+ textStatus + jqXHR + errorThrown);
		}
    });
}

function deleteBook(){
	var token = localStorage.getItem("token");
	$.ajax({
        url: 'https://localhost:8080/ebook/books/delete/'+bookID,
        headers:{Authorization:"Bearer " + token},
        contentType: "application/json",
		type: 'DELETE',
        success: function (response) {
        	console.log("book delete success");
        	$('#deleteEbookModal').modal('toggle');
        	loadEbooksAdmin();
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert("pri birsanju book: "+ textStatus+jqXHR + errorThrown);
		}
    });
}